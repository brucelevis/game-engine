- pbr workflow / material system
- material id
- Triangle list<first index, num index, material_index> for multiple materials per mesh

- write non platform specific file handling utils
- asset/import system
- refer to assets by id, not pointers
- when packing the game, we need to move all assets to .pak files
- LOD
- get the entire asset system off strings, only the entry point of importing should be strings

- memory allocators. No more random mallocs
- general purpose allocator
- pool allocator
- Simd/ Optimize / Profile/ Vtune
- Set up renderdoc
- proper mesh importers using our custom allocators
- debug windows/overlays
- Hot loading
- Directx backend
- Vulkan backend
- Scene tree
- Collisions

- Write some swizzling data to interleave, positions, uvs, other data
- Editor guis
- multi threaded game loop
- implement deffered rendering
- frustum culling
- occlusion culling
- lod  
- ecs without inheritance
- more asserts
- gamma corrected lighting
- allocator stats. How much has been allocated, freed, how many allocs, etc
